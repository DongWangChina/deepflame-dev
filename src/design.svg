<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="3489px" preserveAspectRatio="none" style="width:1597px;height:3489px;background:#FFFFFF;" version="1.1" viewBox="0 0 1597 3489" width="1597px" zoomAndPan="magnify"><defs/><g><!--MD5=[d150478598ea549b43d9dc88ea744521]
cluster CanteraSpecies--><g id="cluster_CanteraSpecies"><path d="M1101.5,1142.5 L1226.5,1142.5 A3.75,3.75 0 0 1 1229,1145 L1236,1164.7969 L1587.5,1164.7969 A2.5,2.5 0 0 1 1590,1167.2969 L1590,2423 A2.5,2.5 0 0 1 1587.5,2425.5 L1101.5,2425.5 A2.5,2.5 0 0 1 1099,2423 L1099,1145 A2.5,2.5 0 0 1 1101.5,1142.5 " style="stroke:#000000;stroke-width:1.5;fill:none;"/><line style="stroke:#000000;stroke-width:1.5;fill:none;" x1="1099" x2="1236" y1="1164.7969" y2="1164.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="124" x="1103" y="1157.4951">CanteraSpecies</text></g><!--MD5=[3644a941be417bd2267d97bb6b970f0b]
cluster Cantera--><g id="cluster_Cantera"><path d="M676.5,2981 L739.5,2981 A3.75,3.75 0 0 1 742,2983.5 L749,3003.2969 L1091.5,3003.2969 A2.5,2.5 0 0 1 1094,3005.7969 L1094,3077.5 A2.5,2.5 0 0 1 1091.5,3080 L676.5,3080 A2.5,2.5 0 0 1 674,3077.5 L674,2983.5 A2.5,2.5 0 0 1 676.5,2981 " style="stroke:#000000;stroke-width:1.5;fill:none;"/><line style="stroke:#000000;stroke-width:1.5;fill:none;" x1="674" x2="749" y1="3003.2969" y2="3003.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="62" x="678" y="2995.9951">Cantera</text></g><!--MD5=[0ac2d5a35b8398f1eb759f83416a33f2]
class CanteraSpecies.CanteraSpecies--><g id="elem_CanteraSpecies.CanteraSpecies"><rect codeLine="93" fill="#F1F1F1" height="602.0938" id="CanteraSpecies.CanteraSpecies" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="424" x="1142" y="1185.5"/><ellipse cx="1295.25" cy="1201.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1298.2188,1207.1406 Q1297.6406,1207.4375 1297,1207.5781 Q1296.3594,1207.7344 1295.6563,1207.7344 Q1293.1563,1207.7344 1291.8281,1206.0938 Q1290.5156,1204.4375 1290.5156,1201.3125 Q1290.5156,1198.1875 1291.8281,1196.5313 Q1293.1563,1194.875 1295.6563,1194.875 Q1296.3594,1194.875 1297,1195.0313 Q1297.6563,1195.1875 1298.2188,1195.4844 L1298.2188,1198.2031 Q1297.5938,1197.625 1297,1197.3594 Q1296.4063,1197.0781 1295.7813,1197.0781 Q1294.4375,1197.0781 1293.75,1198.1563 Q1293.0625,1199.2188 1293.0625,1201.3125 Q1293.0625,1203.4063 1293.75,1204.4844 Q1294.4375,1205.5469 1295.7813,1205.5469 Q1296.4063,1205.5469 1297,1205.2813 Q1297.5938,1205 1298.2188,1204.4219 L1298.2188,1207.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="1315.75" y="1206.3467">CanteraSpecies</text><line style="stroke:#181818;stroke-width:0.5;" x1="1143" x2="1565" y1="1217.5" y2="1217.5"/><polygon fill="none" points="1153,1223.5,1157,1227.5,1153,1231.5,1149,1227.5" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="1162" y="1234.4951">std::unique_ptr&lt;Impl&gt; pimpl_;</text><polygon fill="none" points="1153,1239.7969,1157,1243.7969,1153,1247.7969,1149,1243.7969" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="1162" y="1250.792">IOdictionary CanteraTorchProperties_;</text><polygon fill="none" points="1153,1256.0938,1157,1260.0938,1153,1264.0938,1149,1260.0938" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249" x="1162" y="1267.0889">const word CanteraMechanismFile_;</text><polygon fill="none" points="1153,1272.3906,1157,1276.3906,1153,1280.3906,1149,1276.3906" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="376" x="1162" y="1283.3857">std::shared_ptr&lt;Cantera::Solution&gt; CanteraSolution_;</text><polygon fill="none" points="1153,1288.6875,1157,1292.6875,1153,1296.6875,1149,1292.6875" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="388" x="1162" y="1299.6826">std::shared_ptr&lt;Cantera::ThermoPhase&gt; CanteraGas_;</text><polygon fill="none" points="1153,1304.9844,1157,1308.9844,1153,1312.9844,1149,1308.9844" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="1162" y="1315.9795">word transportModelName_;</text><polygon fill="none" points="1153,1321.2813,1157,1325.2813,1153,1329.2813,1149,1325.2813" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="398" x="1162" y="1332.2764">std::shared_ptr&lt;Cantera::Transport&gt; CanteraTransport_;</text><polygon fill="none" points="1153,1337.5781,1157,1341.5781,1153,1345.5781,1149,1341.5781" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="1162" y="1348.5732">hashedWordList species_;</text><polygon fill="none" points="1153,1353.875,1157,1357.875,1153,1361.875,1149,1357.875" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="1162" y="1364.8701">PtrList&lt;volScalarField&gt; Y_;</text><line style="stroke:#181818;stroke-width:0.5;" x1="1143" x2="1565" y1="1372.1719" y2="1372.1719"/><ellipse cx="1153" cy="1383.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="360" x="1162" y="1389.167">void calcCp(const scalar&amp; p, const scalar&amp; T) const;</text><ellipse cx="1153" cy="1399.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="362" x="1162" y="1405.4639">void calcMu(const scalar&amp; p, const scalar&amp; T) const;</text><ellipse cx="1153" cy="1415.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="351" x="1162" y="1421.7607">void calcH(const scalar&amp; p, const scalar&amp; T) const;</text><ellipse cx="1153" cy="1432.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="1162" y="1438.0576">scalar Cp(label i, scalar p, scalar T) const;</text><ellipse cx="1153" cy="1448.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="285" x="1162" y="1454.3545">scalar mu(label i, scalar p, scalar T) const;</text><ellipse cx="1153" cy="1464.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="281" x="1162" y="1470.6514">scalar Ha(label i, scalar p, scalar T) const;</text><ellipse cx="1153" cy="1480.9531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="1162" y="1486.9482">scalar Hf(label i) const</text><ellipse cx="1153" cy="1497.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="276" x="1162" y="1503.2451">scalar Hs(label i, scalar p, scalar T) const</text><ellipse cx="1153" cy="1513.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="1162" y="1519.542">scalar Wi(label i) const</text><ellipse cx="1153" cy="1529.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="300" x="1162" y="1535.8389">scalar kappa(label i, scalar p, scalar T) const</text><ellipse cx="1153" cy="1546.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="277" x="1162" y="1552.1357">const hashedWordList&amp; species() const</text><ellipse cx="1153" cy="1562.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="1162" y="1568.4326">size_t nSpecies()</text><ellipse cx="1153" cy="1578.7344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="386" x="1162" y="1584.7295">std::shared_ptr&lt;Cantera::ThermoPhase&gt; CanteraGas()</text><ellipse cx="1153" cy="1595.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="374" x="1162" y="1601.0264">std::shared_ptr&lt;Cantera::Solution&gt; CanteraSolution()</text><ellipse cx="1153" cy="1611.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="396" x="1162" y="1617.3232">std::shared_ptr&lt;Cantera::Transport&gt; CanteraTransport()</text><ellipse cx="1153" cy="1627.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="1162" y="1633.6201">const word&amp; transportModelName()</text><ellipse cx="1153" cy="1643.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="1162" y="1649.917">PtrList&lt;volScalarField&gt;&amp; Y()</text><ellipse cx="1153" cy="1660.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="279" x="1162" y="1666.2139">const PtrList&lt;volScalarField&gt;&amp; Y() const</text><ellipse cx="1153" cy="1676.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="1162" y="1682.5107">volScalarField&amp; Y(const label i)</text><ellipse cx="1153" cy="1692.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="1162" y="1698.8076">const volScalarField&amp; Y(const label i) const</text><ellipse cx="1153" cy="1709.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="1162" y="1715.1045">volScalarField&amp; Y(const word&amp; specieName)</text><ellipse cx="1153" cy="1725.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="392" x="1162" y="1731.4014">const volScalarField&amp; Y(const word&amp; specieName) const</text><ellipse cx="1153" cy="1741.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="325" x="1162" y="1747.6982">bool contains(const word&amp; specieName) const</text><ellipse cx="1153" cy="1758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="1162" y="1763.9951">bool solve(label speciei) const</text><ellipse cx="1153" cy="1774.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="1162" y="1780.292">label index(const volScalarField&amp; Yi) const</text></g><!--MD5=[069f0be1458129922863590d5667f8c7]
class CanteraSpecies.Impl--><g id="elem_CanteraSpecies.Impl"><rect codeLine="130" fill="#F1F1F1" height="210.9688" id="CanteraSpecies.Impl" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="316" x="1196" y="2190.5"/><ellipse cx="1335.75" cy="2206.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1338.7188,2212.1406 Q1338.1406,2212.4375 1337.5,2212.5781 Q1336.8594,2212.7344 1336.1563,2212.7344 Q1333.6563,2212.7344 1332.3281,2211.0938 Q1331.0156,2209.4375 1331.0156,2206.3125 Q1331.0156,2203.1875 1332.3281,2201.5313 Q1333.6563,2199.875 1336.1563,2199.875 Q1336.8594,2199.875 1337.5,2200.0313 Q1338.1563,2200.1875 1338.7188,2200.4844 L1338.7188,2203.2031 Q1338.0938,2202.625 1337.5,2202.3594 Q1336.9063,2202.0781 1336.2813,2202.0781 Q1334.9375,2202.0781 1334.25,2203.1563 Q1333.5625,2204.2188 1333.5625,2206.3125 Q1333.5625,2208.4063 1334.25,2209.4844 Q1334.9375,2210.5469 1336.2813,2210.5469 Q1336.9063,2210.5469 1337.5,2210.2813 Q1338.0938,2210 1338.7188,2209.4219 L1338.7188,2212.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="1356.25" y="2211.3467">Impl</text><line style="stroke:#181818;stroke-width:0.5;" x1="1197" x2="1511" y1="2222.5" y2="2222.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1204" y="2230.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="253" x="1216" y="2239.4951">CanteraSpecies* CanteraSpeciesPtr;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1204" y="2246.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="1216" y="2255.792">scalarList HaTemp_;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1204" y="2263.0938"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="1216" y="2272.0889">scalarList CpTemp_;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1204" y="2279.3906"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="1216" y="2288.3857">scalarList muTemp_;</text><line style="stroke:#181818;stroke-width:0.5;" x1="1197" x2="1511" y1="2295.6875" y2="2295.6875"/><ellipse cx="1207" cy="2306.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="1216" y="2312.6826">void calcCp(const scalar T, const scalar p)</text><ellipse cx="1207" cy="2322.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="1216" y="2328.9795">void calcMu(const scalar T, const scalar p)</text><ellipse cx="1207" cy="2339.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="279" x="1216" y="2345.2764">void calcH(const scalar T, const scalar p)</text><ellipse cx="1207" cy="2355.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="277" x="1216" y="2361.5732">scalar Cp(label i, scalar p, scalar T) const</text><ellipse cx="1207" cy="2371.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="280" x="1216" y="2377.8701">scalar mu(label i, scalar p, scalar T) const</text><ellipse cx="1207" cy="2388.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="276" x="1216" y="2394.167">scalar Ha(label i, scalar p, scalar T) const</text></g><!--MD5=[67951b08bc04b5a4b26581a9aee5278d]
class Cantera.Solution--><g id="elem_Cantera.Solution"><rect fill="#F1F1F1" height="48" id="Cantera.Solution" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="88" x="825" y="3016"/><ellipse cx="840" cy="3032" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M842.9688,3037.6406 Q842.3906,3037.9375 841.75,3038.0781 Q841.1094,3038.2344 840.4063,3038.2344 Q837.9063,3038.2344 836.5781,3036.5938 Q835.2656,3034.9375 835.2656,3031.8125 Q835.2656,3028.6875 836.5781,3027.0313 Q837.9063,3025.375 840.4063,3025.375 Q841.1094,3025.375 841.75,3025.5313 Q842.4063,3025.6875 842.9688,3025.9844 L842.9688,3028.7031 Q842.3438,3028.125 841.75,3027.8594 Q841.1563,3027.5781 840.5313,3027.5781 Q839.1875,3027.5781 838.5,3028.6563 Q837.8125,3029.7188 837.8125,3031.8125 Q837.8125,3033.9063 838.5,3034.9844 Q839.1875,3036.0469 840.5313,3036.0469 Q841.1563,3036.0469 841.75,3035.7813 Q842.3438,3035.5 842.9688,3034.9219 L842.9688,3037.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="854" y="3036.8467">Solution</text><line style="stroke:#181818;stroke-width:0.5;" x1="826" x2="912" y1="3048" y2="3048"/><line style="stroke:#181818;stroke-width:0.5;" x1="826" x2="912" y1="3056" y2="3056"/></g><!--MD5=[d6f5cc74273314f3d603d858b928ae02]
class Cantera.ThermoPhase--><g id="elem_Cantera.ThermoPhase"><rect fill="#F1F1F1" height="48" id="Cantera.ThermoPhase" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="129" x="948.5" y="3016"/><ellipse cx="963.5" cy="3032" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M966.4688,3037.6406 Q965.8906,3037.9375 965.25,3038.0781 Q964.6094,3038.2344 963.9063,3038.2344 Q961.4063,3038.2344 960.0781,3036.5938 Q958.7656,3034.9375 958.7656,3031.8125 Q958.7656,3028.6875 960.0781,3027.0313 Q961.4063,3025.375 963.9063,3025.375 Q964.6094,3025.375 965.25,3025.5313 Q965.9063,3025.6875 966.4688,3025.9844 L966.4688,3028.7031 Q965.8438,3028.125 965.25,3027.8594 Q964.6563,3027.5781 964.0313,3027.5781 Q962.6875,3027.5781 962,3028.6563 Q961.3125,3029.7188 961.3125,3031.8125 Q961.3125,3033.9063 962,3034.9844 Q962.6875,3036.0469 964.0313,3036.0469 Q964.6563,3036.0469 965.25,3035.7813 Q965.8438,3035.5 966.4688,3034.9219 L966.4688,3037.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="977.5" y="3036.8467">ThermoPhase</text><line style="stroke:#181818;stroke-width:0.5;" x1="949.5" x2="1076.5" y1="3048" y2="3048"/><line style="stroke:#181818;stroke-width:0.5;" x1="949.5" x2="1076.5" y1="3056" y2="3056"/></g><!--MD5=[4ec7e7b42949a51929000125e5405cee]
class Cantera.Transport--><g id="elem_Cantera.Transport"><rect fill="#F1F1F1" height="48" id="Cantera.Transport" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="99" x="690.5" y="3016"/><ellipse cx="705.5" cy="3032" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M708.4688,3037.6406 Q707.8906,3037.9375 707.25,3038.0781 Q706.6094,3038.2344 705.9063,3038.2344 Q703.4063,3038.2344 702.0781,3036.5938 Q700.7656,3034.9375 700.7656,3031.8125 Q700.7656,3028.6875 702.0781,3027.0313 Q703.4063,3025.375 705.9063,3025.375 Q706.6094,3025.375 707.25,3025.5313 Q707.9063,3025.6875 708.4688,3025.9844 L708.4688,3028.7031 Q707.8438,3028.125 707.25,3027.8594 Q706.6563,3027.5781 706.0313,3027.5781 Q704.6875,3027.5781 704,3028.6563 Q703.3125,3029.7188 703.3125,3031.8125 Q703.3125,3033.9063 704,3034.9844 Q704.6875,3036.0469 706.0313,3036.0469 Q706.6563,3036.0469 707.25,3035.7813 Q707.8438,3035.5 708.4688,3034.9219 L708.4688,3037.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="719.5" y="3036.8467">Transport</text><line style="stroke:#181818;stroke-width:0.5;" x1="691.5" x2="788.5" y1="3048" y2="3048"/><line style="stroke:#181818;stroke-width:0.5;" x1="691.5" x2="788.5" y1="3056" y2="3056"/></g><!--MD5=[9aa45753d75d5b8ba5a87033a2c57743]
class IOdictionary--><g id="elem_IOdictionary"><rect fill="#F1F1F1" height="48" id="IOdictionary" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="112" x="926" y="7"/><ellipse cx="941" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M943.9688,28.6406 Q943.3906,28.9375 942.75,29.0781 Q942.1094,29.2344 941.4063,29.2344 Q938.9063,29.2344 937.5781,27.5938 Q936.2656,25.9375 936.2656,22.8125 Q936.2656,19.6875 937.5781,18.0313 Q938.9063,16.375 941.4063,16.375 Q942.1094,16.375 942.75,16.5313 Q943.4063,16.6875 943.9688,16.9844 L943.9688,19.7031 Q943.3438,19.125 942.75,18.8594 Q942.1563,18.5781 941.5313,18.5781 Q940.1875,18.5781 939.5,19.6563 Q938.8125,20.7188 938.8125,22.8125 Q938.8125,24.9063 939.5,25.9844 Q940.1875,27.0469 941.5313,27.0469 Q942.1563,27.0469 942.75,26.7813 Q943.3438,26.5 943.9688,25.9219 L943.9688,28.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="955" y="27.8467">IOdictionary</text><line style="stroke:#181818;stroke-width:0.5;" x1="927" x2="1037" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="927" x2="1037" y1="47" y2="47"/></g><!--MD5=[5718d80c23f526bd513c03c24ec949eb]
class basicThermo--><g id="elem_basicThermo"><rect codeLine="3" fill="#F1F1F1" height="911.4375" id="basicThermo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="592" x="337" y="116"/><ellipse cx="584.25" cy="132" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M584.3594,127.3438 L583.2031,132.4219 L585.5313,132.4219 L584.3594,127.3438 Z M582.875,125.1094 L585.8594,125.1094 L589.2188,137.5 L586.7656,137.5 L586,134.4375 L582.7188,134.4375 L581.9688,137.5 L579.5313,137.5 L582.875,125.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="89" x="604.75" y="136.8467">basicThermo</text><line style="stroke:#181818;stroke-width:0.5;" x1="338" x2="928" y1="148" y2="148"/><polygon fill="none" points="348,174.2969,352,178.2969,348,182.2969,344,178.2969" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="357" y="185.292">const word&amp; phaseName_</text><polygon fill="none" points="348,190.5938,352,194.5938,348,198.5938,344,194.5938" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="357" y="201.5889">volScalarField&amp; p_</text><polygon fill="none" points="348,206.8906,352,210.8906,348,214.8906,344,210.8906" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="357" y="217.8857">volScalarField T_</text><polygon fill="none" points="348,223.1875,352,227.1875,348,231.1875,344,227.1875" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="357" y="234.1826">volScalarField alpha_</text><polygon fill="none" points="348,239.4844,352,243.4844,348,247.4844,344,243.4844" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="357" y="250.4795">Switch dpdt_</text><line style="stroke:#181818;stroke-width:0.5;" x1="338" x2="582" y1="164.1484" y2="164.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="582" y="168.4951">Protected data</text><line style="stroke:#181818;stroke-width:0.5;" x1="684" x2="928" y1="164.1484" y2="164.1484"/><polygon fill="#FFFF44" points="348,276.0781,352,280.0781,348,284.0781,344,280.0781" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="566" x="357" y="287.0732">volScalarField&amp; lookupOrConstruct(const fvMesh&amp; mesh,const char* name) const</text><polygon fill="#FFFF44" points="348,292.375,352,296.375,348,300.375,344,296.375" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="357" y="303.3701">wordList heBoundaryTypes()</text><polygon fill="#FFFF44" points="348,308.6719,352,312.6719,348,316.6719,344,312.6719" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="232" x="357" y="319.667">wordList heBoundaryBaseTypes()</text><line style="stroke:#181818;stroke-width:0.5;" x1="338" x2="532.5" y1="265.9297" y2="265.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="532.5" y="270.2764">Protected Member Functions</text><line style="stroke:#181818;stroke-width:0.5;" x1="733.5" x2="928" y1="265.9297" y2="265.9297"/><ellipse cx="348" cy="350.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="357" y="356.2607">void correct() = 0</text><ellipse cx="348" cy="366.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="357" y="372.5576">Switch dpdt() const{return dpdt_}</text><line style="stroke:#181818;stroke-width:0.5;" x1="338" x2="570.5" y1="335.1172" y2="335.1172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="570.5" y="339.4639">Member functions</text><line style="stroke:#181818;stroke-width:0.5;" x1="695.5" x2="928" y1="335.1172" y2="335.1172"/><ellipse cx="348" cy="403.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="357" y="409.1514">volScalarField&amp; p() // [Pa]</text><ellipse cx="348" cy="419.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="357" y="425.4482">const volScalarField&amp; p() const // [Pa]</text><ellipse cx="348" cy="435.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336" x="357" y="441.7451">tmp&lt;volScalarField&gt; rho() const = 0 // [kg/m^3]</text><ellipse cx="348" cy="452.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="358" x="357" y="458.042">tmp&lt;scalarField&gt; rho(patchi) const = 0 // [kg/m^3]</text><ellipse cx="348" cy="468.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="357" y="474.3389">volScalarField&amp; he() = 0 // [J/kg]</text><ellipse cx="348" cy="484.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="357" y="490.6357">const volScalarField&amp; he() const = 0 // [J/kg]</text><ellipse cx="348" cy="500.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="322" x="357" y="506.9326">tmp&lt;volScalarField&gt; he(p,T) const = 0 // [J/kg]</text><ellipse cx="348" cy="517.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="451" x="357" y="523.2295">tmp&lt;scalarField&gt; he(p,T,const labelList&amp; cells) const = 0 // [J/kg]</text><ellipse cx="348" cy="533.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="348" x="357" y="539.5264">tmp&lt;scalarField&gt; he(p,T,patchi) const = 0 // [J/kg]</text><ellipse cx="348" cy="549.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="299" x="357" y="555.8232">tmp&lt;volScalarField&gt; hc() const = 0 // [J/kg]</text><ellipse cx="348" cy="566.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="430" x="357" y="572.1201">tmp&lt;scalarField&gt; THE(h,p,T0,const labelList&amp; cells) const = 0</text><ellipse cx="348" cy="582.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="327" x="357" y="588.417">tmp&lt;scalarField&gt; THE(h,p,T0,patchi) const = 0</text><line style="stroke:#181818;stroke-width:0.5;" x1="338" x2="492" y1="388.0078" y2="388.0078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="492" y="392.3545">Access to thermodynamic state variables</text><line style="stroke:#181818;stroke-width:0.5;" x1="774" x2="928" y1="388.0078" y2="388.0078"/><ellipse cx="348" cy="619.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="357" y="625.0107">const volScalarField&amp; T() const // [K]</text><ellipse cx="348" cy="635.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="357" y="641.3076">volScalarField&amp; T() // [K]</text><ellipse cx="348" cy="651.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="315" x="357" y="657.6045">tmp&lt;volScalarField&gt; Cp() const = 0 // [J/kg/K]</text><ellipse cx="348" cy="667.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="363" x="357" y="673.9014">tmp&lt;scalarField&gt; Cp(p,T,patchi) const = 0 // [J/kg/K]</text><ellipse cx="348" cy="684.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="313" x="357" y="690.1982">tmp&lt;volScalarField&gt; Cv() const = 0 // [J/kg/K]</text><ellipse cx="348" cy="700.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="361" x="357" y="706.4951">tmp&lt;scalarField&gt; Cv(p,T,patchi) const = 0 // [J/kg/K]</text><ellipse cx="348" cy="716.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="357" y="722.792">tmp&lt;volScalarField&gt; gamma() const = 0 // []</text><ellipse cx="348" cy="733.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="356" x="357" y="739.0889">tmp&lt;scalarField&gt; gamma(p,T,patchi) const = 0 // []</text><ellipse cx="348" cy="749.3906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="322" x="357" y="755.3857">tmp&lt;volScalarField&gt; Cpv() const = 0 // [J/kg/K]</text><ellipse cx="348" cy="765.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="370" x="357" y="771.6826">tmp&lt;scalarField&gt; Cpv(p,T,patchi) const = 0 // [J/kg/K]</text><ellipse cx="348" cy="781.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="319" x="357" y="787.9795">tmp&lt;volScalarField&gt; CpByCpv() const = 0 // []</text><ellipse cx="348" cy="798.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="367" x="357" y="804.2764">tmp&lt;scalarField&gt; CpByCpv(p,T,patchi) const = 0 // []</text><ellipse cx="348" cy="814.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="325" x="357" y="820.5732">tmp&lt;volScalarField&gt; W() const = 0 // [kg/kmol]</text><ellipse cx="348" cy="830.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="347" x="357" y="836.8701">tmp&lt;scalarField&gt; W(patchi) const = 0 // [kg/kmol]</text><line style="stroke:#181818;stroke-width:0.5;" x1="338" x2="492" y1="603.8672" y2="603.8672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="492" y="608.2139">Access to thermodynamic state variables</text><line style="stroke:#181818;stroke-width:0.5;" x1="774" x2="928" y1="603.8672" y2="603.8672"/><ellipse cx="348" cy="867.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="317" x="357" y="873.4639">const volScalarField&amp; alpha() const // [kg/m/s]</text><ellipse cx="348" cy="883.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="339" x="357" y="889.7607">const scalarField&amp; alpha(patchi) const // [kg/m/s]</text><ellipse cx="348" cy="900.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="344" x="357" y="906.0576">tmp&lt;volScalarField&gt; kappa() const = 0 // [W/m/K]</text><ellipse cx="348" cy="916.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="366" x="357" y="922.3545">tmp&lt;scalarField&gt; kappa(patchi) const = 0 // [W/m/K]</text><ellipse cx="348" cy="932.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="360" x="357" y="938.6514">tmp&lt;volScalarField&gt; alphahe() const = 0 // [kg/m/s]</text><ellipse cx="348" cy="948.9531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="461" x="357" y="954.9482">tmp&lt;scalarField&gt; alphahe(const label patchi) const = 0 // [kg/m/s]</text><ellipse cx="348" cy="965.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="508" x="357" y="971.2451">tmp&lt;volScalarField&gt; kappaEff(const volScalarField&amp;) const = 0 // [W/m/K]</text><ellipse cx="348" cy="981.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="429" x="357" y="987.542">tmp&lt;scalarField&gt; kappaEff(alphat,patchi) const = 0 // [W/m/K]</text><ellipse cx="348" cy="997.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="401" x="357" y="1003.8389">tmp&lt;volScalarField&gt; alphaEff(alphat) const = 0 // [kg/m/s]</text><ellipse cx="348" cy="1014.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="427" x="357" y="1020.1357">tmp&lt;scalarField&gt; alphaEff(alphat,patchi) const = 0 // [kg/m/s]</text><line style="stroke:#181818;stroke-width:0.5;" x1="338" x2="514" y1="852.3203" y2="852.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="514" y="856.667">Access to transport state variables</text><line style="stroke:#181818;stroke-width:0.5;" x1="752" x2="928" y1="852.3203" y2="852.3203"/></g><!--MD5=[f5d5430f63d1e230e157b131863b7130]
class fluidThermo--><g id="elem_fluidThermo"><rect codeLine="60" fill="#F1F1F1" height="158.0781" id="fluidThermo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="387" x="138.5" y="1407.5"/><ellipse cx="286.75" cy="1423.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M286.8594,1418.8438 L285.7031,1423.9219 L288.0313,1423.9219 L286.8594,1418.8438 Z M285.375,1416.6094 L288.3594,1416.6094 L291.7188,1429 L289.2656,1429 L288.5,1425.9375 L285.2188,1425.9375 L284.4688,1429 L282.0313,1429 L285.375,1416.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="82" x="307.25" y="1428.3467">fluidThermo</text><line style="stroke:#181818;stroke-width:0.5;" x1="139.5" x2="524.5" y1="1439.5" y2="1439.5"/><ellipse cx="149.5" cy="1470.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="361" x="158.5" y="1476.792">void correctRho(const volScalarField&amp; deltaRho) = 0</text><ellipse cx="149.5" cy="1487.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="349" x="158.5" y="1493.0889">const volScalarField&amp; psi() const = 0 // [s^2/m^2]</text><ellipse cx="149.5" cy="1503.3906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="327" x="158.5" y="1509.3857">tmp&lt;volScalarField&gt; mu() const = 0 // [kg/m/s]</text><ellipse cx="149.5" cy="1519.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="349" x="158.5" y="1525.6826">tmp&lt;scalarField&gt; mu(patchi) const = 0 // [kg/m/s]</text><ellipse cx="149.5" cy="1535.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="158.5" y="1541.9795">tmp&lt;volScalarField&gt; nu() const // [m^2/s]</text><ellipse cx="149.5" cy="1552.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="315" x="158.5" y="1558.2764">tmp&lt;scalarField&gt; nu(patchi) const // [m^2/s]</text><line style="stroke:#181818;stroke-width:0.5;" x1="139.5" x2="269.5" y1="1455.6484" y2="1455.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="269.5" y="1459.9951">Member functions</text><line style="stroke:#181818;stroke-width:0.5;" x1="394.5" x2="524.5" y1="1455.6484" y2="1455.6484"/></g><!--MD5=[b51c55bf37018133614369fe70ca0507]
class compressibleTransportModel--><g id="elem_compressibleTransportModel"><rect fill="#F1F1F1" height="48" id="compressibleTransportModel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="234" x="68" y="547.5"/><ellipse cx="83" cy="563.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M85.9688,569.1406 Q85.3906,569.4375 84.75,569.5781 Q84.1094,569.7344 83.4063,569.7344 Q80.9063,569.7344 79.5781,568.0938 Q78.2656,566.4375 78.2656,563.3125 Q78.2656,560.1875 79.5781,558.5313 Q80.9063,556.875 83.4063,556.875 Q84.1094,556.875 84.75,557.0313 Q85.4063,557.1875 85.9688,557.4844 L85.9688,560.2031 Q85.3438,559.625 84.75,559.3594 Q84.1563,559.0781 83.5313,559.0781 Q82.1875,559.0781 81.5,560.1563 Q80.8125,561.2188 80.8125,563.3125 Q80.8125,565.4063 81.5,566.4844 Q82.1875,567.5469 83.5313,567.5469 Q84.1563,567.5469 84.75,567.2813 Q85.3438,567 85.9688,566.4219 L85.9688,569.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="97" y="568.3467">compressibleTransportModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="69" x2="301" y1="579.5" y2="579.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="69" x2="301" y1="587.5" y2="587.5"/></g><!--MD5=[5963d8d98d7fae3c2d91f4091f1cbb14]
class psiThermo--><g id="elem_psiThermo"><rect codeLine="71" fill="#F1F1F1" height="190.6719" id="psiThermo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="424" x="120" y="2200.5"/><ellipse cx="291.25" cy="2216.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M291.3594,2211.8438 L290.2031,2216.9219 L292.5313,2216.9219 L291.3594,2211.8438 Z M289.875,2209.6094 L292.8594,2209.6094 L296.2188,2222 L293.7656,2222 L293,2218.9375 L289.7188,2218.9375 L288.9688,2222 L286.5313,2222 L289.875,2209.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="73" x="311.75" y="2221.3467">psiThermo</text><line style="stroke:#181818;stroke-width:0.5;" x1="121" x2="543" y1="2232.5" y2="2232.5"/><polygon fill="none" points="131,2258.7969,135,2262.7969,131,2266.7969,127,2262.7969" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="140" y="2269.792">volScalarField psi_</text><polygon fill="none" points="131,2275.0938,135,2279.0938,131,2283.0938,127,2279.0938" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="140" y="2286.0889">volScalarField mu_</text><ellipse cx="131" cy="2296.3906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="385" x="140" y="2302.3857">virtual tmp&lt;volScalarField&gt; rho() const {return p_*psi_}</text><ellipse cx="131" cy="2312.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="140" y="2318.6826">virtual tmp&lt;scalarField&gt; rho(patchi) const</text><ellipse cx="131" cy="2328.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="398" x="140" y="2334.9795">virtual void correctRho(const volScalarField&amp; deltaRho) {}</text><ellipse cx="131" cy="2345.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="140" y="2351.2764">virtual const volScalarField&amp; psi() const</text><ellipse cx="131" cy="2361.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="266" x="140" y="2367.5732">virtual tmp&lt;volScalarField&gt; mu() const</text><ellipse cx="131" cy="2377.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="140" y="2383.8701">virtual tmp&lt;scalarField&gt; mu(patchi) const</text><line style="stroke:#181818;stroke-width:0.5;" x1="121" x2="281" y1="2248.6484" y2="2248.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="281" y="2252.9951">Protected data</text><line style="stroke:#181818;stroke-width:0.5;" x1="383" x2="543" y1="2248.6484" y2="2248.6484"/></g><!--MD5=[73211f087d76e1d8d19cd34341378d28]
class CanteraMixture--><g id="elem_CanteraMixture"><rect codeLine="155" fill="#F1F1F1" height="732.4688" id="CanteraMixture" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="422" x="653" y="1930"/><ellipse cx="807.75" cy="1946" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M810.7188,1951.6406 Q810.1406,1951.9375 809.5,1952.0781 Q808.8594,1952.2344 808.1563,1952.2344 Q805.6563,1952.2344 804.3281,1950.5938 Q803.0156,1948.9375 803.0156,1945.8125 Q803.0156,1942.6875 804.3281,1941.0313 Q805.6563,1939.375 808.1563,1939.375 Q808.8594,1939.375 809.5,1939.5313 Q810.1563,1939.6875 810.7188,1939.9844 L810.7188,1942.7031 Q810.0938,1942.125 809.5,1941.8594 Q808.9063,1941.5781 808.2813,1941.5781 Q806.9375,1941.5781 806.25,1942.6563 Q805.5625,1943.7188 805.5625,1945.8125 Q805.5625,1947.9063 806.25,1948.9844 Q806.9375,1950.0469 808.2813,1950.0469 Q808.9063,1950.0469 809.5,1949.7813 Q810.0938,1949.5 810.7188,1948.9219 L810.7188,1951.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="828.25" y="1950.8467">CanteraMixture</text><line style="stroke:#181818;stroke-width:0.5;" x1="654" x2="1074" y1="1962" y2="1962"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="661" y="1970"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="256" x="673" y="1978.9951">IOdictionary CanteraTorchProperties_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="661" y="1986.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="673" y="1995.292">const word CanteraMechanismFile_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="661" y="2002.5938"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="371" x="673" y="2011.5889">std::shared_ptr&lt;Cantera::Solution&gt; CanteraSolution_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="661" y="2018.8906"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="383" x="673" y="2027.8857">std::shared_ptr&lt;Cantera::ThermoPhase&gt; CanteraGas_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="661" y="2035.1875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="673" y="2044.1826">word transportModelName_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="661" y="2051.4844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="393" x="673" y="2060.4795">std::shared_ptr&lt;Cantera::Transport&gt; CanteraTransport_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="661" y="2067.7813"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="673" y="2076.7764">hashedWordList species_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="661" y="2084.0781"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="673" y="2093.0732">PtrList&lt;volScalarField&gt; Y_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="661" y="2100.375"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="673" y="2109.3701">const volScalarField&amp; Tref_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="661" y="2116.6719"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="673" y="2125.667">const volScalarField&amp; pref_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="661" y="2132.9688"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="673" y="2141.9639">mutable scalarList yTemp_</text><ellipse cx="664" cy="2152.2656" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="284" x="673" y="2158.2607">typedef CanteraMixture basicMixtureType</text><ellipse cx="664" cy="2168.5625" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="673" y="2174.5576">typedef CanteraMixture thermoType</text><ellipse cx="664" cy="2184.8594" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="275" x="673" y="2190.8545">static const bool incompressible = false</text><ellipse cx="664" cy="2201.1563" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="232" x="673" y="2207.1514">static const bool isochoric = false</text><line style="stroke:#181818;stroke-width:0.5;" x1="654" x2="1074" y1="2214.4531" y2="2214.4531"/><ellipse cx="664" cy="2225.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="673" y="2231.4482">CanteraMixture&amp; cellMixture(celli)</text><ellipse cx="664" cy="2241.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="334" x="673" y="2247.7451">CanteraMixture&amp; patchFaceMixture(patchi, facei)</text><ellipse cx="664" cy="2258.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="673" y="2264.042">const scalar THE(scalar p, scalar T)</text><ellipse cx="664" cy="2274.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="673" y="2280.3389">const scalar psi(scalar p, scalar T)</text><ellipse cx="664" cy="2290.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="233" x="673" y="2296.6357">const scalar mu(scalar p, scalar T)</text><ellipse cx="664" cy="2306.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="257" x="673" y="2312.9326">const scalar alphah(scalar p, scalar T)</text><ellipse cx="664" cy="2323.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="673" y="2329.2295">const scalar HE(scalar p, scalar T)</text><ellipse cx="664" cy="2339.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="673" y="2345.5264">const scalar Hc(scalar p, scalar T)</text><ellipse cx="664" cy="2355.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="673" y="2361.8232">const scalar Cp(scalar p, scalar T)</text><ellipse cx="664" cy="2372.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="228" x="673" y="2378.1201">const scalar Cv(scalar p, scalar T)</text><ellipse cx="664" cy="2388.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="262" x="673" y="2394.417">const scalar gamma(scalar p, scalar T)</text><ellipse cx="664" cy="2404.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="673" y="2410.7139">const scalar Cpv(scalar p, scalar T)</text><ellipse cx="664" cy="2421.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="273" x="673" y="2427.0107">const scalar CpByCpv(scalar p, scalar T)</text><ellipse cx="664" cy="2437.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="673" y="2443.3076">const scalar W() const</text><ellipse cx="664" cy="2453.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="673" y="2459.6045">static inline word heName() {return "ha"}</text><ellipse cx="664" cy="2469.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="673" y="2475.9014">PtrList&lt;volScalarField&gt;&amp; Y()</text><ellipse cx="664" cy="2486.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="279" x="673" y="2492.1982">const PtrList&lt;volScalarField&gt;&amp; Y() const</text><ellipse cx="664" cy="2502.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="673" y="2508.4951">volScalarField&amp; Y(const label i)</text><ellipse cx="664" cy="2518.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="673" y="2524.792">const volScalarField&amp; Y(const label i) const</text><ellipse cx="664" cy="2535.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="673" y="2541.0889">volScalarField&amp; Y(const word&amp; specieName)</text><ellipse cx="664" cy="2551.3906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="392" x="673" y="2557.3857">const volScalarField&amp; Y(const word&amp; specieName) const</text><ellipse cx="664" cy="2567.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="673" y="2573.6826">const hashedWordList&amp; species()</text><ellipse cx="664" cy="2583.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="673" y="2589.9795">scalar nSpecies()</text><ellipse cx="664" cy="2600.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="386" x="673" y="2606.2764">std::shared_ptr&lt;Cantera::ThermoPhase&gt; CanteraGas()</text><ellipse cx="664" cy="2616.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="374" x="673" y="2622.5732">std::shared_ptr&lt;Cantera::Solution&gt; CanteraSolution()</text><ellipse cx="664" cy="2632.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="396" x="673" y="2638.8701">std::shared_ptr&lt;Cantera::Transport&gt; CanteraTransport()</text><ellipse cx="664" cy="2649.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="673" y="2655.167">const word&amp; transportModelName()</text></g><!--MD5=[0a16d22128b4ad5656329988caa6403e]
class heThermo--><g id="elem_heThermo"><rect codeLine="201" fill="#F1F1F1" height="602.0938" id="heThermo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="646" x="9" y="2739"/><ellipse cx="208.25" cy="2755" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M208.3594,2750.3438 L207.2031,2755.4219 L209.5313,2755.4219 L208.3594,2750.3438 Z M206.875,2748.1094 L209.8594,2748.1094 L213.2188,2760.5 L210.7656,2760.5 L210,2757.4375 L206.7188,2757.4375 L205.9688,2760.5 L203.5313,2760.5 L206.875,2748.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="72" x="228.75" y="2759.8467">heThermo</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="165" x="493" y="2736"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="163" x="494" y="2748.1387">BasicThermo, MixtureType</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="654" y1="2771" y2="2771"/><polygon fill="none" points="20,2797.2969,24,2801.2969,20,2805.2969,16,2801.2969" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="29" y="2808.292">volScalarField he_</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="281" y1="2787.1484" y2="2787.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="281" y="2791.4951">Protected data</text><line style="stroke:#181818;stroke-width:0.5;" x1="383" x2="654" y1="2787.1484" y2="2787.1484"/><ellipse cx="20" cy="2838.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="534" x="29" y="2844.8857">virtual typename MixtureType::basicMixtureType&amp;composition(){return *this}</text><ellipse cx="20" cy="2855.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="620" x="29" y="2861.1826">virtual const typename MixtureType::basicMixtureType&amp;composition() const{return *this}</text><ellipse cx="20" cy="2871.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="557" x="29" y="2877.4795">virtual word thermoName() const{return MixtureType::thermoType::typeName()}</text><ellipse cx="20" cy="2887.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="322" x="29" y="2893.7764">virtual volScalarField&amp; he(){return he_} // [J/kg]</text><ellipse cx="20" cy="2904.0781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="408" x="29" y="2910.0732">virtual const volScalarField&amp; he() const{return he_} // [J/kg]</text><ellipse cx="20" cy="2920.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="337" x="29" y="2926.3701">virtual tmp&lt;volScalarField&gt; he(p,T) const // [J/kg]</text><ellipse cx="20" cy="2936.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="466" x="29" y="2942.667">virtual tmp&lt;scalarField&gt; he(p,T,const labelList&amp; cells) const // [J/kg]</text><ellipse cx="20" cy="2952.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="363" x="29" y="2958.9639">virtual tmp&lt;scalarField&gt; he(p,T,patchi) const // [J/kg]</text><ellipse cx="20" cy="2969.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="314" x="29" y="2975.2607">virtual tmp&lt;volScalarField&gt; hc() const // [J/kg]</text><ellipse cx="20" cy="2985.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="466" x="29" y="2991.5576">virtual tmp&lt;scalarField&gt; THE(he, p, T0, const labelList&amp; cells) const</text><ellipse cx="20" cy="3001.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="363" x="29" y="3007.8545">virtual tmp&lt;scalarField&gt; THE(he, p, T0, patchi) const</text><ellipse cx="20" cy="3018.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="386" x="29" y="3024.1514">virtual tmp&lt;scalarField&gt; Cp(p, T, patchi) const // [J/kg/K]</text><ellipse cx="20" cy="3034.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="330" x="29" y="3040.4482">virtual tmp&lt;volScalarField&gt; Cp() const // [J/kg/K]</text><ellipse cx="20" cy="3050.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="384" x="29" y="3056.7451">virtual tmp&lt;scalarField&gt; Cv(p, T, patchi) const // [J/kg/K]</text><ellipse cx="20" cy="3067.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="328" x="29" y="3073.042">virtual tmp&lt;volScalarField&gt; Cv() const // [J/kg/K]</text><ellipse cx="20" cy="3083.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="323" x="29" y="3089.3389">virtual tmp&lt;volScalarField&gt; gamma() const // []</text><ellipse cx="20" cy="3099.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="374" x="29" y="3105.6357">virtual tmp&lt;scalarField&gt; gamma(p, T, patchi) const // [</text><ellipse cx="20" cy="3115.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="393" x="29" y="3121.9326">virtual tmp&lt;scalarField&gt; Cpv(p, T, patchi) const // [J/kg/K]</text><ellipse cx="20" cy="3132.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="337" x="29" y="3138.2295">virtual tmp&lt;volScalarField&gt; Cpv() const // [J/kg/K]</text><ellipse cx="20" cy="3148.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="334" x="29" y="3154.5264">virtual tmp&lt;volScalarField&gt; CpByCpv() const // []</text><ellipse cx="20" cy="3164.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="386" x="29" y="3170.8232">virtual tmp&lt;scalarField&gt; CpByCpv(p, T,patchi) const // []</text><ellipse cx="20" cy="3181.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="340" x="29" y="3187.1201">virtual tmp&lt;volScalarField&gt; W() const // [kg/kmol]</text><ellipse cx="20" cy="3197.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="441" x="29" y="3203.417">virtual tmp&lt;scalarField&gt; W(const label patchi) const // [kg/kmol]</text><ellipse cx="20" cy="3213.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="359" x="29" y="3219.7139">virtual tmp&lt;volScalarField&gt; kappa() const // [W/m/K]</text><ellipse cx="20" cy="3230.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="381" x="29" y="3236.0107">virtual tmp&lt;scalarField&gt; kappa(patchi) const // [W/m/K]</text><ellipse cx="20" cy="3246.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="375" x="29" y="3252.3076">virtual tmp&lt;volScalarField&gt; alphahe() const // [kg/m/s]</text><ellipse cx="20" cy="3262.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="397" x="29" y="3268.6045">virtual tmp&lt;scalarField&gt; alphahe(patchi) const // [kg/m/s]</text><ellipse cx="20" cy="3278.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="523" x="29" y="3284.9014">virtual tmp&lt;volScalarField&gt; kappaEff(const volScalarField&amp;) const // [W/m/K]</text><ellipse cx="20" cy="3295.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="448" x="29" y="3301.1982">virtual tmp&lt;scalarField&gt; kappaEff(alphat, patchi) const // [W/m/K]</text><ellipse cx="20" cy="3311.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="416" x="29" y="3317.4951">virtual tmp&lt;volScalarField&gt; alphaEff(alphat) const // [kg/m/s]</text><ellipse cx="20" cy="3327.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="446" x="29" y="3333.792">virtual tmp&lt;scalarField&gt; alphaEff(alphat, patchi) const // [kg/m/s]</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="269.5" y1="2823.7422" y2="2823.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="269.5" y="2828.0889">Member functions</text><line style="stroke:#181818;stroke-width:0.5;" x1="394.5" x2="654" y1="2823.7422" y2="2823.7422"/></g><!--MD5=[6cdd622678505c202b6e5eedf4a437ac]
class hePsiThermo--><g id="elem_hePsiThermo"><rect codeLine="239" fill="#F1F1F1" height="80.5938" id="hePsiThermo" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="307" x="178.5" y="3402"/><ellipse cx="193.5" cy="3418" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M196.4688,3423.6406 Q195.8906,3423.9375 195.25,3424.0781 Q194.6094,3424.2344 193.9063,3424.2344 Q191.4063,3424.2344 190.0781,3422.5938 Q188.7656,3420.9375 188.7656,3417.8125 Q188.7656,3414.6875 190.0781,3413.0313 Q191.4063,3411.375 193.9063,3411.375 Q194.6094,3411.375 195.25,3411.5313 Q195.9063,3411.6875 196.4688,3411.9844 L196.4688,3414.7031 Q195.8438,3414.125 195.25,3413.8594 Q194.6563,3413.5781 194.0313,3413.5781 Q192.6875,3413.5781 192,3414.6563 Q191.3125,3415.7188 191.3125,3417.8125 Q191.3125,3419.9063 192,3420.9844 Q192.6875,3422.0469 194.0313,3422.0469 Q194.6563,3422.0469 195.25,3421.7813 Q195.8438,3421.5 196.4688,3420.9219 L196.4688,3423.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="207.5" y="3422.8467">hePsiThermo</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="181" x="307.5" y="3399"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="179" x="308.5" y="3411.1387">BasicPsiThermo, MixtureType</text><line style="stroke:#181818;stroke-width:0.5;" x1="179.5" x2="484.5" y1="3434" y2="3434"/><line style="stroke:#181818;stroke-width:0.5;" x1="179.5" x2="484.5" y1="3442" y2="3442"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="186.5" y="3450"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="198.5" y="3458.9951">calculate() : void</text><ellipse cx="189.5" cy="3469.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="198.5" y="3475.292">correct() : void</text></g><!--MD5=[cad4912badd7f3bd47bab06578e804a8]
class dfChemistryModel--><g id="elem_dfChemistryModel"><rect codeLine="247" fill="#F1F1F1" height="765.0625" id="dfChemistryModel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="437" x="562.5" y="1104"/><ellipse cx="674.25" cy="1120" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M677.2188,1125.6406 Q676.6406,1125.9375 676,1126.0781 Q675.3594,1126.2344 674.6563,1126.2344 Q672.1563,1126.2344 670.8281,1124.5938 Q669.5156,1122.9375 669.5156,1119.8125 Q669.5156,1116.6875 670.8281,1115.0313 Q672.1563,1113.375 674.6563,1113.375 Q675.3594,1113.375 676,1113.5313 Q676.6563,1113.6875 677.2188,1113.9844 L677.2188,1116.7031 Q676.5938,1116.125 676,1115.8594 Q675.4063,1115.5781 674.7813,1115.5781 Q673.4375,1115.5781 672.75,1116.6563 Q672.0625,1117.7188 672.0625,1119.8125 Q672.0625,1121.9063 672.75,1122.9844 Q673.4375,1124.0469 674.7813,1124.0469 Q675.4063,1124.0469 676,1123.7813 Q676.5938,1123.5 677.2188,1122.9219 L677.2188,1125.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="694.75" y="1124.8467">dfChemistryModel</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="79" x="923.5" y="1101"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="77" x="924.5" y="1113.1387">ThermoType</text><line style="stroke:#181818;stroke-width:0.5;" x1="563.5" x2="998.5" y1="1136" y2="1136"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1144"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="582.5" y="1152.9951">ThermoType&amp; thermo_;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1160.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="582.5" y="1169.292">CanteraMixture&amp; mixture_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1176.5938"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="383" x="582.5" y="1185.5889">std::shared_ptr&lt;Cantera::ThermoPhase&gt; CanteraGas_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1192.8906"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="582.5" y="1201.8857">const fvMesh&amp; mesh_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1209.1875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="582.5" y="1218.1826">Switch chemistry_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1225.4844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="582.5" y="1234.4795">scalar relTol_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1241.7813"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="582.5" y="1250.7764">scalar absTol_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1258.0781"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="582.5" y="1267.0732">PtrList&lt;volScalarField&gt;&amp; Y_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1274.375"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="582.5" y="1283.3701">PtrList&lt;volScalarField&gt; rhoD_;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1290.6719"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="582.5" y="1299.667">PtrList&lt;volScalarField&gt; hai_;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1306.9688"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="582.5" y="1315.9639">mutable scalarList yTemp_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1323.2656"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="582.5" y="1332.2607">mutable scalarList dTemp_;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1339.5625"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198" x="582.5" y="1348.5576">mutable scalarList hrtTemp_;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1355.8594"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="582.5" y="1364.8545">mutable scalarField cTemp_;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1372.1563"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="582.5" y="1381.1514">PtrList&lt;volScalarField::Internal&gt; RR_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1388.4531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="582.5" y="1397.4482">hashedWordList species_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1404.75"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="582.5" y="1413.7451">volScalarField&amp; alpha_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1421.0469"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="582.5" y="1430.042">volScalarField&amp; T_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1437.3438"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="582.5" y="1446.3389">const volScalarField&amp; p_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1453.6406"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="582.5" y="1462.6357">const volScalarField&amp; rho_;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1469.9375"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="582.5" y="1478.9326">volScalarField&amp; mu_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1486.2344"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="582.5" y="1495.2295">volScalarField&amp; psi_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1502.5313"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="582.5" y="1511.5264">volScalarField Qdot_;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1518.8281"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="582.5" y="1527.8232">Switch torchSwitch_;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1535.125"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="582.5" y="1544.1201">word torchModelName_;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1551.4219"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="582.5" y="1560.417">scalarList Xmu_;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1567.7188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="582.5" y="1576.7139">scalarList Xstd_;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1584.0156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="582.5" y="1593.0107">scalarList Ymu_;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1600.3125"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="582.5" y="1609.3076">scalarList Ystd_;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1616.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="582.5" y="1625.6045">scalar Tact_;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1632.9063"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="582.5" y="1641.9014">scalar Qdotact_;</text><line style="stroke:#181818;stroke-width:0.5;" x1="563.5" x2="998.5" y1="1649.2031" y2="1649.2031"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1657.2031"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="582.5" y="1666.1982">void setNumerics(Cantera::ReactorNet &amp;r)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1673.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="324" x="582.5" y="1682.4951">scalar canteraSolve(const DeltaTType&amp; deltaT)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="570.5" y="1689.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="582.5" y="1698.792">scalar torchSolve(const DeltaTType&amp; deltaT)</text><ellipse cx="573.5" cy="1709.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="264" x="582.5" y="1715.0889">virtual scalar solve(const scalar deltaT)</text><ellipse cx="573.5" cy="1725.3906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="582.5" y="1731.3857">virtual scalar solve(const scalarField&amp; deltaT)</text><ellipse cx="573.5" cy="1741.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="411" x="582.5" y="1747.6826">virtual const volScalarField::Internal&amp; RR(const label i) const</text><ellipse cx="573.5" cy="1757.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="325" x="582.5" y="1763.9795">virtual volScalarField::Internal&amp; RR(const label i)</text><ellipse cx="573.5" cy="1774.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="278" x="582.5" y="1780.2764">virtual tmp&lt;volScalarField&gt; Qdot() const</text><ellipse cx="573.5" cy="1790.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="582.5" y="1796.5732">PtrList&lt;volScalarField&gt;&amp; Y()</text><ellipse cx="573.5" cy="1806.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="277" x="582.5" y="1812.8701">const hashedWordList&amp; species() const</text><ellipse cx="573.5" cy="1823.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="582.5" y="1829.167">const volScalarField&amp; rhoD(const label i) const</text><ellipse cx="573.5" cy="1839.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="220" x="582.5" y="1845.4639">volScalarField&amp; hai(const label i)</text><ellipse cx="573.5" cy="1855.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="582.5" y="1861.7607">void correctThermo()</text></g><!--MD5=[a78545a97f2b6c2101afe7c543469128]
reverse link IOdictionary to basicThermo--><g id="link_IOdictionary_basicThermo"><path codeLine="2" d="M956.08,72 C948.04,84.41 938.4,99.27 927.56,115.99 " fill="none" id="IOdictionary-backto-basicThermo" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="950.25,68.12,967,55.14,962,75.73,950.25,68.12" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[de7547727b3779e4fbc4d5894c656014]
reverse link basicThermo to fluidThermo--><g id="link_basicThermo_fluidThermo"><path codeLine="58" d="M476.68,1046.65 C430.51,1186.69 385.07,1324.52 357.78,1407.3 " fill="none" id="basicThermo-backto-fluidThermo" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="470.14,1044.13,483.05,1027.33,483.44,1048.51,470.14,1044.13" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2c95b4f734da0799cbfb67403f10a0b2]
reverse link compressibleTransportModel to fluidThermo--><g id="link_compressibleTransportModel_fluidThermo"><path codeLine="59" d="M191.89,615.31 C214.94,758.44 289.54,1221.8 319.44,1407.48 " fill="none" id="compressibleTransportModel-backto-fluidThermo" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="184.98,616.38,188.71,595.53,198.8,614.16,184.98,616.38" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[32aa6bd68789edd87a71b4feb6b0b5bd]
reverse link fluidThermo to psiThermo--><g id="link_fluidThermo_psiThermo"><path codeLine="70" d="M332,1585.83 C332,1742.37 332,2046.27 332,2200.42 " fill="none" id="fluidThermo-backto-psiThermo" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="325,1585.66,332,1565.66,339,1585.66,325,1585.66" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[758070a648ef10bb69d4a157ab5da6ef]
reverse link CanteraMixture to heThermo--><g id="link_CanteraMixture_heThermo"><path codeLine="84" d="M641.3,2607.6 C610.13,2651.08 578.15,2695.68 547.13,2738.95 " fill="none" id="CanteraMixture-backto-heThermo" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="635.63,2603.5,652.98,2591.32,647.01,2611.66,635.63,2603.5" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="77" x="576" y="2705.0669">MixtureType</text></g><!--MD5=[c7bf95d41961768caaf6ae8057318281]
reverse link psiThermo to heThermo--><g id="link_psiThermo_heThermo"><path codeLine="85" d="M332,2411.74 C332,2499.19 332,2623.78 332,2738.9 " fill="none" id="psiThermo-backto-heThermo" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="325,2411.73,332,2391.73,339,2411.73,325,2411.73" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="83" x="333" y="2705.0669">BasicThermo</text></g><!--MD5=[ba3f535ef18c1da85a63c6c0cdbf5d6c]
reverse link CanteraSpecies.CanteraSpecies to CanteraSpecies.Impl--><g id="link_CanteraSpecies.CanteraSpecies_CanteraSpecies.Impl"><path codeLine="129" d="M1341.54,1800.91 C1340.64,1938.84 1341.83,2091.59 1345.09,2190.22 " fill="none" id="CanteraSpecies.CanteraSpecies-backto-CanteraSpecies.Impl" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1341.63,1787.61,1337.5905,1793.5835,1341.5509,1799.6097,1345.5904,1793.6362,1341.63,1787.61" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[840173f49bc4470f4daeac67000f2842]
reverse link CanteraSpecies.Impl to CanteraSpecies.CanteraSpecies--><g id="link_CanteraSpecies.Impl_CanteraSpecies.CanteraSpecies"><path codeLine="142" d="M1363.87,2177.09 C1367.1,2075.05 1368.17,1922.99 1367.1,1787.61 " fill="none" id="CanteraSpecies.Impl-backto-CanteraSpecies.CanteraSpecies" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1363.44,2190.22,1367.6422,2184.3598,1363.849,2178.227,1359.6468,2184.0872,1363.44,2190.22" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[19417a937993ad3350da2ec28bc9afdc]
reverse link CanteraSpecies to CanteraMixture--><g id="link_CanteraSpecies_CanteraMixture"><path codeLine="146" d="M1098.9605,1795.5333 C1098.8467,1796.2618 1098.732,1796.9903 1098.6164,1797.7186 C1096.7664,1809.3722 1094.6832,1821.001 1092.342,1832.5334 C1087.6595,1855.5981 1081.945,1878.2775 1075,1900 C1071.83,1909.9 1068.42,1919.85 1064.8,1929.81 " fill="none" id="CanteraSpecies-backto-CanteraMixture" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="1098.9605,1795.5333,1089.1119,1813.2252,1102.9441,1815.386,1098.9605,1795.5333" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1bc07257c0b01ce5f330674ce7a0d81b]
reverse link CanteraMixture to Cantera.Solution--><g id="link_CanteraMixture_Cantera.Solution"><path codeLine="151" d="M866.55,2675.06 C867.52,2819 868.48,2961.52 868.84,3015.92 " fill="none" id="CanteraMixture-backto-Cantera.Solution" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="866.46,2662.02,862.4996,2668.0462,866.5391,2674.0197,870.4995,2667.9935,866.46,2662.02" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[977c062b63967cf116c45a383e6b3826]
reverse link CanteraMixture to Cantera.ThermoPhase--><g id="link_CanteraMixture_Cantera.ThermoPhase"><path codeLine="152" d="M939.92,2675.06 C968.82,2819 997.44,2961.52 1008.37,3015.92 " fill="none" id="CanteraMixture-backto-Cantera.ThermoPhase" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="937.3,2662.02,934.5587,2668.6897,939.661,2673.7854,942.4023,2667.1157,937.3,2662.02" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2ad90d3a1c0a6bb38c15a0fea30c3e5e]
reverse link CanteraMixture to Cantera.Transport--><g id="link_CanteraMixture_Cantera.Transport"><path codeLine="153" d="M800.82,2675.06 C776.77,2819 752.95,2961.52 743.86,3015.92 " fill="none" id="CanteraMixture-backto-Cantera.Transport" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="803,2662.02,798.0652,2667.2781,801.0208,2673.8557,805.9556,2668.5976,803,2662.02" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[4f932e82870784c63464dc7d702bab6b]
reverse link CanteraMixture to IOdictionary--><g id="link_CanteraMixture_IOdictionary"><path codeLine="154" d="M1007.24,1916.85 C1010.96,1900.8 1014.25,1884.81 1017,1869 C1085.01,1478.43 1110.34,468.8 1011,85 C1008.32,74.64 1003.17,64.13 997.95,55.22 " fill="none" id="CanteraMixture-backto-IOdictionary" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1004.17,1929.74,1009.4524,1924.8313,1006.953,1918.0672,1001.6706,1922.9759,1004.17,1929.74" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[276b98003857b442cc569f134a8c3f0a]
reverse link heThermo to hePsiThermo--><g id="link_heThermo_hePsiThermo"><path codeLine="238" d="M332,3361.41 C332,3376.47 332,3390.1 332,3401.67 " fill="none" id="heThermo-backto-hePsiThermo" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="325,3361.21,332,3341.21,339,3361.21,325,3361.21" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[83b72112df20c4a5507c41f4e85a73e2]
reverse link IOdictionary to dfChemistryModel--><g id="link_IOdictionary_dfChemistryModel"><path codeLine="244" d="M985.21,75.03 C994.62,214.27 1017.18,664.54 947,1027 C942.09,1052.35 936,1078.17 929.07,1103.98 " fill="none" id="IOdictionary-backto-dfChemistryModel" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="978.23,75.52,983.81,55.07,992.2,74.53,978.23,75.52" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[710c3416254485f352b7f3b0925997cd]
reverse link basicThermo to dfChemistryModel--><g id="link_basicThermo_dfChemistryModel"><path codeLine="245" d="M707.56,1032.43 C711.43,1056.31 715.3,1080.18 719.12,1103.78 " fill="none" id="basicThermo-backto-dfChemistryModel" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="706.73,1027.33,704.2193,1036.8535,707.5289,1032.2658,712.1166,1035.5753,706.73,1027.33" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="79" x="714" y="1070.0669">ThermoType</text></g><!--MD5=[76412dc9431bd3cff842a1d9dee7d8cf]
reverse link dfChemistryModel to CanteraMixture--><g id="link_dfChemistryModel_CanteraMixture"><path codeLine="246" d="M821.59,1882.35 C823.21,1898.15 824.84,1913.97 826.45,1929.72 " fill="none" id="dfChemistryModel-backto-CanteraMixture" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="820.22,1869.08,816.8536,1875.4571,821.4453,1881.0173,824.8118,1874.6402,820.22,1869.08" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[3b4b14cc5831247a2970707700696e12]
@startuml

IOdictionary <|- - basicThermo
abstract class basicThermo{
    __ Protected data __
    #const word& phaseName_
    #volScalarField& p_
    #volScalarField T_
    #volScalarField alpha_
    #Switch dpdt_
    __ Protected Member Functions __
    #volScalarField& lookupOrConstruct(const fvMesh& mesh,const char* name) const
    #wordList heBoundaryTypes()
    #wordList heBoundaryBaseTypes()
    __ Member functions __
    +void correct() = 0
    +Switch dpdt() const{return dpdt_}
    __ Access to thermodynamic state variables __
    +volScalarField& p() // [Pa]
    +const volScalarField& p() const // [Pa]
    +tmp<volScalarField> rho() const = 0 // [kg/m^3]
    +tmp<scalarField> rho(patchi) const = 0 // [kg/m^3]
    +volScalarField& he() = 0 // [J/kg]
    +const volScalarField& he() const = 0 // [J/kg]
    +tmp<volScalarField> he(p,T) const = 0 // [J/kg]
    +tmp<scalarField> he(p,T,const labelList& cells) const = 0 // [J/kg]
    +tmp<scalarField> he(p,T,patchi) const = 0 // [J/kg]
    +tmp<volScalarField> hc() const = 0 // [J/kg]
    +tmp<scalarField> THE(h,p,T0,const labelList& cells) const = 0
    +tmp<scalarField> THE(h,p,T0,patchi) const = 0
    __ Access to thermodynamic state variables __
    +const volScalarField& T() const // [K]
    +volScalarField& T() // [K]
    +tmp<volScalarField> Cp() const = 0 // [J/kg/K]
    +tmp<scalarField> Cp(p,T,patchi) const = 0 // [J/kg/K]
    +tmp<volScalarField> Cv() const = 0 // [J/kg/K]
    +tmp<scalarField> Cv(p,T,patchi) const = 0 // [J/kg/K]
    +tmp<volScalarField> gamma() const = 0 // []
    +tmp<scalarField> gamma(p,T,patchi) const = 0 // []
    +tmp<volScalarField> Cpv() const = 0 // [J/kg/K]
    +tmp<scalarField> Cpv(p,T,patchi) const = 0 // [J/kg/K]
    +tmp<volScalarField> CpByCpv() const = 0 // []
    +tmp<scalarField> CpByCpv(p,T,patchi) const = 0 // []
    +tmp<volScalarField> W() const = 0 // [kg/kmol]
    +tmp<scalarField> W(patchi) const = 0 // [kg/kmol]
    __ Access to transport state variables __
    +const volScalarField& alpha() const // [kg/m/s]
    +const scalarField& alpha(patchi) const // [kg/m/s]
    +tmp<volScalarField> kappa() const = 0 // [W/m/K]
    +tmp<scalarField> kappa(patchi) const = 0 // [W/m/K]
    +tmp<volScalarField> alphahe() const = 0 // [kg/m/s]
    +tmp<scalarField> alphahe(const label patchi) const = 0 // [kg/m/s]
    +tmp<volScalarField> kappaEff(const volScalarField&) const = 0 // [W/m/K]
    +tmp<scalarField> kappaEff(alphat,patchi) const = 0 // [W/m/K]
    +tmp<volScalarField> alphaEff(alphat) const = 0 // [kg/m/s]
    +tmp<scalarField> alphaEff(alphat,patchi) const = 0 // [kg/m/s]
}

basicThermo <|- - fluidThermo
compressibleTransportModel <|- - fluidThermo
abstract class fluidThermo{
    __ Member functions __
    +void correctRho(const volScalarField& deltaRho) = 0
    +const volScalarField& psi() const = 0 // [s^2/m^2]
    +tmp<volScalarField> mu() const = 0 // [kg/m/s]
    +tmp<scalarField> mu(patchi) const = 0 // [kg/m/s]
    +tmp<volScalarField> nu() const // [m^2/s]
    +tmp<scalarField> nu(patchi) const // [m^2/s]
}

fluidThermo <|- - psiThermo
abstract psiThermo{
    __ Protected data __
    #volScalarField psi_
    #volScalarField mu_
    +virtual tmp<volScalarField> rho() const {return p_*psi_}
    +virtual tmp<scalarField> rho(patchi) const
    +virtual void correctRho(const volScalarField& deltaRho) {}
    +virtual const volScalarField& psi() const
    +virtual tmp<volScalarField> mu() const
    +virtual tmp<scalarField> mu(patchi) const
}


CanteraMixture <|- - heThermo : MixtureType
psiThermo <|- - heThermo : BasicThermo






namespace CanteraSpecies{
    class CanteraSpecies{
        #std::unique_ptr<Impl> pimpl_;
        #IOdictionary CanteraTorchProperties_;
        #const word CanteraMechanismFile_;
        #std::shared_ptr<Cantera::Solution> CanteraSolution_;
        #std::shared_ptr<Cantera::ThermoPhase> CanteraGas_;
        #word transportModelName_;
        #std::shared_ptr<Cantera::Transport> CanteraTransport_;
        #hashedWordList species_;
        #PtrList<volScalarField> Y_;
        +void calcCp(const scalar& p, const scalar& T) const;
        +void calcMu(const scalar& p, const scalar& T) const;
        +void calcH(const scalar& p, const scalar& T) const;
        +scalar Cp(label i, scalar p, scalar T) const;
        +scalar mu(label i, scalar p, scalar T) const;
        +scalar Ha(label i, scalar p, scalar T) const;
        +scalar Hf(label i) const
        +scalar Hs(label i, scalar p, scalar T) const
        +scalar Wi(label i) const
        +scalar kappa(label i, scalar p, scalar T) const
        +const hashedWordList& species() const
        +size_t nSpecies()
        +std::shared_ptr<Cantera::ThermoPhase> CanteraGas()
        +std::shared_ptr<Cantera::Solution> CanteraSolution()
        +std::shared_ptr<Cantera::Transport> CanteraTransport()
        +const word& transportModelName()
        +PtrList<volScalarField>& Y()
        +const PtrList<volScalarField>& Y() const
        +volScalarField& Y(const label i)
        +const volScalarField& Y(const label i) const
        +volScalarField& Y(const word& specieName)
        +const volScalarField& Y(const word& specieName) const
        +bool contains(const word& specieName) const
        +bool solve(label speciei) const
        +label index(const volScalarField& Yi) const
    }
    CanteraSpecies *- - Impl
    class Impl{
        -CanteraSpecies* CanteraSpeciesPtr;
        -scalarList HaTemp_;
        -scalarList CpTemp_;
        -scalarList muTemp_;
        +void calcCp(const scalar T, const scalar p)
        +void calcMu(const scalar T, const scalar p)
        +void calcH(const scalar T, const scalar p)
        +scalar Cp(label i, scalar p, scalar T) const
        +scalar mu(label i, scalar p, scalar T) const
        +scalar Ha(label i, scalar p, scalar T) const
    }
    Impl o- - CanteraSpecies
}


CanteraSpecies <|- - CanteraMixture




CanteraMixture *- - Cantera.Solution
CanteraMixture *- - Cantera.ThermoPhase
CanteraMixture *- - Cantera.Transport
CanteraMixture *- - IOdictionary
class CanteraMixture{
    -IOdictionary CanteraTorchProperties_
    -const word CanteraMechanismFile_
    -std::shared_ptr<Cantera::Solution> CanteraSolution_
    -std::shared_ptr<Cantera::ThermoPhase> CanteraGas_
    -word transportModelName_
    -std::shared_ptr<Cantera::Transport> CanteraTransport_
    -hashedWordList species_
    -PtrList<volScalarField> Y_
    -const volScalarField& Tref_
    -const volScalarField& pref_
    -mutable scalarList yTemp_
    +typedef CanteraMixture basicMixtureType
    +typedef CanteraMixture thermoType
    +static const bool incompressible = false
    +static const bool isochoric = false
    +CanteraMixture& cellMixture(celli)
    +CanteraMixture& patchFaceMixture(patchi, facei)
    +const scalar THE(scalar p, scalar T)
    +const scalar psi(scalar p, scalar T)
    +const scalar mu(scalar p, scalar T)
    +const scalar alphah(scalar p, scalar T)
    +const scalar HE(scalar p, scalar T)
    +const scalar Hc(scalar p, scalar T)
    +const scalar Cp(scalar p, scalar T)
    +const scalar Cv(scalar p, scalar T)
    +const scalar gamma(scalar p, scalar T)
    +const scalar Cpv(scalar p, scalar T)
    +const scalar CpByCpv(scalar p, scalar T)
    +const scalar W() const
    +static inline word heName() {return "ha"}
    +PtrList<volScalarField>& Y()
    +const PtrList<volScalarField>& Y() const
    +volScalarField& Y(const label i)
    +const volScalarField& Y(const label i) const
    +volScalarField& Y(const word& specieName)
    +const volScalarField& Y(const word& specieName) const
    +const hashedWordList& species()
    +scalar nSpecies()
    +std::shared_ptr<Cantera::ThermoPhase> CanteraGas()
    +std::shared_ptr<Cantera::Solution> CanteraSolution()
    +std::shared_ptr<Cantera::Transport> CanteraTransport()
    +const word& transportModelName()
}


abstract heThermo<BasicThermo, MixtureType>{
    __ Protected data __
    #volScalarField he_
    __ Member functions __
    +virtual typename MixtureType::basicMixtureType&composition(){return *this}
    +virtual const typename MixtureType::basicMixtureType&composition() const{return *this}
    +virtual word thermoName() const{return MixtureType::thermoType::typeName()}
    +virtual volScalarField& he(){return he_} // [J/kg]
    +virtual const volScalarField& he() const{return he_} // [J/kg]
    +virtual tmp<volScalarField> he(p,T) const // [J/kg]
    +virtual tmp<scalarField> he(p,T,const labelList& cells) const // [J/kg]
    +virtual tmp<scalarField> he(p,T,patchi) const // [J/kg]
    +virtual tmp<volScalarField> hc() const // [J/kg]
    +virtual tmp<scalarField> THE(he, p, T0, const labelList& cells) const
    +virtual tmp<scalarField> THE(he, p, T0, patchi) const
    +virtual tmp<scalarField> Cp(p, T, patchi) const // [J/kg/K]
    +virtual tmp<volScalarField> Cp() const // [J/kg/K]
    +virtual tmp<scalarField> Cv(p, T, patchi) const // [J/kg/K]
    +virtual tmp<volScalarField> Cv() const // [J/kg/K]
    +virtual tmp<volScalarField> gamma() const // []
    +virtual tmp<scalarField> gamma(p, T, patchi) const // [
    +virtual tmp<scalarField> Cpv(p, T, patchi) const // [J/kg/K]
    +virtual tmp<volScalarField> Cpv() const // [J/kg/K]
    +virtual tmp<volScalarField> CpByCpv() const // []
    +virtual tmp<scalarField> CpByCpv(p, T,patchi) const // []
    +virtual tmp<volScalarField> W() const // [kg/kmol]
    +virtual tmp<scalarField> W(const label patchi) const // [kg/kmol]
    +virtual tmp<volScalarField> kappa() const // [W/m/K]
    +virtual tmp<scalarField> kappa(patchi) const // [W/m/K]
    +virtual tmp<volScalarField> alphahe() const // [kg/m/s]
    +virtual tmp<scalarField> alphahe(patchi) const // [kg/m/s]
    +virtual tmp<volScalarField> kappaEff(const volScalarField&) const // [W/m/K]
    +virtual tmp<scalarField> kappaEff(alphat, patchi) const // [W/m/K]
    +virtual tmp<volScalarField> alphaEff(alphat) const // [kg/m/s]
    +virtual tmp<scalarField> alphaEff(alphat, patchi) const // [kg/m/s]
}

heThermo <|- - hePsiThermo
class hePsiThermo<BasicPsiThermo, MixtureType>{
    -calculate() : void
    +correct() : void
}

IOdictionary <|- - dfChemistryModel
basicThermo <.. dfChemistryModel :ThermoType
dfChemistryModel o- - CanteraMixture
class dfChemistryModel<ThermoType>{
    -ThermoType& thermo_;
    -CanteraMixture& mixture_
    -std::shared_ptr<Cantera::ThermoPhase> CanteraGas_
    -const fvMesh& mesh_
    -Switch chemistry_
    -scalar relTol_
    -scalar absTol_
    -PtrList<volScalarField>& Y_
    -PtrList<volScalarField> rhoD_;
    -PtrList<volScalarField> hai_;
    -mutable scalarList yTemp_
    -mutable scalarList dTemp_;
    -mutable scalarList hrtTemp_;
    -mutable scalarField cTemp_;
    -PtrList<volScalarField::Internal> RR_
    -hashedWordList species_
    -volScalarField& alpha_
    -volScalarField& T_
    -const volScalarField& p_
    -const volScalarField& rho_;
    -volScalarField& mu_
    -volScalarField& psi_
    -volScalarField Qdot_;
    -Switch torchSwitch_;
    -word torchModelName_;
    -scalarList Xmu_;
    -scalarList Xstd_;
    -scalarList Ymu_;
    -scalarList Ystd_;
    -scalar Tact_;
    -scalar Qdotact_;

    -void setNumerics(Cantera::ReactorNet &r)
    -scalar canteraSolve(const DeltaTType& deltaT)
    -scalar torchSolve(const DeltaTType& deltaT)
    +virtual scalar solve(const scalar deltaT)
    +virtual scalar solve(const scalarField& deltaT)
    +virtual const volScalarField::Internal& RR(const label i) const
    +virtual volScalarField::Internal& RR(const label i)
    +virtual tmp<volScalarField> Qdot() const
    +PtrList<volScalarField>& Y()
    +const hashedWordList& species() const
    +const volScalarField& rhoD(const label i) const
    +volScalarField& hai(const label i)
    +void correctThermo()
}
@enduml

PlantUML version 1.2022.6(Wed Jun 22 01:34:49 CST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>